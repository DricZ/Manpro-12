// Generated by view binder compiler. Do not edit!
package com.example.appmanprobaru.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Guideline;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.appmanprobaru.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemHomeEventBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView IVImg;

  @NonNull
  public final TextView TVDate;

  @NonNull
  public final TextView TVTime;

  @NonNull
  public final TextView TVTitle;

  @NonNull
  public final ConstraintLayout card;

  @NonNull
  public final Guideline guideline;

  @NonNull
  public final TextView textView3;

  @NonNull
  public final TextView textView4;

  private ItemHomeEventBinding(@NonNull ConstraintLayout rootView, @NonNull ImageView IVImg,
      @NonNull TextView TVDate, @NonNull TextView TVTime, @NonNull TextView TVTitle,
      @NonNull ConstraintLayout card, @NonNull Guideline guideline, @NonNull TextView textView3,
      @NonNull TextView textView4) {
    this.rootView = rootView;
    this.IVImg = IVImg;
    this.TVDate = TVDate;
    this.TVTime = TVTime;
    this.TVTitle = TVTitle;
    this.card = card;
    this.guideline = guideline;
    this.textView3 = textView3;
    this.textView4 = textView4;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemHomeEventBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemHomeEventBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_home_event, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemHomeEventBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.IVImg;
      ImageView IVImg = ViewBindings.findChildViewById(rootView, id);
      if (IVImg == null) {
        break missingId;
      }

      id = R.id.TVDate;
      TextView TVDate = ViewBindings.findChildViewById(rootView, id);
      if (TVDate == null) {
        break missingId;
      }

      id = R.id.TVTime;
      TextView TVTime = ViewBindings.findChildViewById(rootView, id);
      if (TVTime == null) {
        break missingId;
      }

      id = R.id.TVTitle;
      TextView TVTitle = ViewBindings.findChildViewById(rootView, id);
      if (TVTitle == null) {
        break missingId;
      }

      id = R.id.card;
      ConstraintLayout card = ViewBindings.findChildViewById(rootView, id);
      if (card == null) {
        break missingId;
      }

      id = R.id.guideline;
      Guideline guideline = ViewBindings.findChildViewById(rootView, id);
      if (guideline == null) {
        break missingId;
      }

      id = R.id.textView3;
      TextView textView3 = ViewBindings.findChildViewById(rootView, id);
      if (textView3 == null) {
        break missingId;
      }

      id = R.id.textView4;
      TextView textView4 = ViewBindings.findChildViewById(rootView, id);
      if (textView4 == null) {
        break missingId;
      }

      return new ItemHomeEventBinding((ConstraintLayout) rootView, IVImg, TVDate, TVTime, TVTitle,
          card, guideline, textView3, textView4);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
