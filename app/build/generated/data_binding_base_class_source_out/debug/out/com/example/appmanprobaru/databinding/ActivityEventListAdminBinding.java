// Generated by view binder compiler. Do not edit!
package com.example.appmanprobaru.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.appmanprobaru.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityEventListAdminBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button addAdmin;

  @NonNull
  public final Button btnFinishedUnFinished;

  @NonNull
  public final Button btnLatestOldest;

  @NonNull
  public final RecyclerView rvEvent;

  private ActivityEventListAdminBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button addAdmin, @NonNull Button btnFinishedUnFinished,
      @NonNull Button btnLatestOldest, @NonNull RecyclerView rvEvent) {
    this.rootView = rootView;
    this.addAdmin = addAdmin;
    this.btnFinishedUnFinished = btnFinishedUnFinished;
    this.btnLatestOldest = btnLatestOldest;
    this.rvEvent = rvEvent;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityEventListAdminBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityEventListAdminBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_event_list_admin, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityEventListAdminBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.addAdmin;
      Button addAdmin = ViewBindings.findChildViewById(rootView, id);
      if (addAdmin == null) {
        break missingId;
      }

      id = R.id.btnFinishedUnFinished;
      Button btnFinishedUnFinished = ViewBindings.findChildViewById(rootView, id);
      if (btnFinishedUnFinished == null) {
        break missingId;
      }

      id = R.id.btnLatestOldest;
      Button btnLatestOldest = ViewBindings.findChildViewById(rootView, id);
      if (btnLatestOldest == null) {
        break missingId;
      }

      id = R.id.rvEvent;
      RecyclerView rvEvent = ViewBindings.findChildViewById(rootView, id);
      if (rvEvent == null) {
        break missingId;
      }

      return new ActivityEventListAdminBinding((ConstraintLayout) rootView, addAdmin,
          btnFinishedUnFinished, btnLatestOldest, rvEvent);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
